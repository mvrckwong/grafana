name: grafana-monitoring-prod

# ==============================================================================
# Grafana Docker Compose Configuration
# ==============================================================================
# 
# This file works in combination with compose.common.yml:
#    docker-compose -f compose.common.yml -f compose.grafana.yml up
#    
# Note: Due to Docker Compose limitations, anchors cannot be shared between files.
# Therefore, this file is self-contained but organized to match common patterns.
# ==============================================================================

# Service template
x-grafana-service-template: &grafana-service-template
  ports:
    - "3000:3000"
  volumes:
    - ./grafana/provisioning:/etc/grafana/provisioning:ro
    - ./grafana/data:/var/lib/grafana
    - ./grafana/logs:/var/log/grafana
    - ./grafana/plugins:/var/lib/grafana/plugins
  restart: unless-stopped
  env_file:
    - .env
  deploy:
    resources:
      limits:
        memory: 1G
        cpus: '0.5'
      reservations:
        memory: 512M
        cpus: '0.25'
  security_opt:
    - no-new-privileges:true
  read_only: false
  user: "472:472"
  healthcheck:
    test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
    interval: 30s
    timeout: 10s
    retries: 5
    start_period: 60s
  logging:
    driver: "json-file"
    options:
      max-size: "10m"
      max-file: "3"
      labels: "app,environment"
  labels:
    - "traefik.enable=true"
    - "traefik.http.routers.grafana.rule=Host(`${GRAFANA_DOMAIN:-localhost}`)"
    - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    - "com.centurylinklabs.watchtower.enable=true"
    - "app=grafana"
    - "environment=production"
  networks:
    - monitoring
    - default

# Complete Grafana environment configuration
x-grafana-env: &grafana-env
  # Grafana-specific environment variables
  - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
  - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
  - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource,grafana-piechart-panel,grafana-worldmap-panel
  - GF_SERVER_ROOT_URL=${GRAFANA_ROOT_URL:-http://localhost:3000}
  - GF_SERVER_DOMAIN=${GRAFANA_DOMAIN:-localhost}
  - GF_SERVER_ENFORCE_DOMAIN=true
  - GF_SECURITY_ALLOW_EMBEDDING=true

services:
  grafana:
    <<: *grafana-service-template
    image: grafana/grafana:12.0.1
    environment: 
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource,grafana-piechart-panel,grafana-worldmap-panel
      - GF_SERVER_ROOT_URL=${GRAFANA_ROOT_URL:-http://localhost:3000}
      - GF_SERVER_DOMAIN=${GRAFANA_DOMAIN:-localhost}
      - GF_SERVER_ENFORCE_DOMAIN=true
      - GF_SECURITY_ALLOW_EMBEDDING=true

networks:
  monitoring:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br-monitoring
    ipam:
      config:
        - subnet: 172.20.0.0/16
  
  default:
    driver: bridge

volumes:
  grafana_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./grafana/data
  
  grafana_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./grafana/logs 