# Simplified Common Configuration Template
# This defines reusable service configurations without Docker images

name: grafana-common-template

# Service template without image specification
x-grafana-base: &grafana-base
  ports:
    - "3000:3000"
  volumes:
    - ./grafana/provisioning:/etc/grafana/provisioning:ro
    - ./grafana/data:/var/lib/grafana
    - ./grafana/logs:/var/log/grafana
    - ./grafana/plugins:/var/lib/grafana/plugins
  restart: unless-stopped
  env_file:
    - .env
  
  # Deploy configuration
  deploy:
    resources:
      limits:
        memory: 1G
        cpus: '0.5'
      reservations:
        memory: 512M
        cpus: '0.25'
  
  # Security configuration
  security_opt:
    - no-new-privileges:true
  read_only: false
  user: "472:472"
  
  # Health check
  healthcheck:
    test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
    interval: 30s
    timeout: 10s
    retries: 5
    start_period: 60s
  
  # Logging configuration
  logging:
    driver: "json-file"
    options:
      max-size: "10m"
      max-file: "3"
      labels: "app,environment"
  
  # Labels
  labels:
    - "traefik.enable=true"
    - "traefik.http.routers.grafana.rule=Host(`${GRAFANA_DOMAIN:-localhost}`)"
    - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    - "com.centurylinklabs.watchtower.enable=true"
    - "app=grafana"
    - "environment=production"
  
  # Networks
  networks:
    - monitoring
    - default

# Common environment variables template
x-common-environment: &common-environment
  - GF_SECURITY_COOKIE_SECURE=true
  - GF_SECURITY_COOKIE_SAMESITE=strict
  - GF_SECURITY_DISABLE_GRAVATAR=true
  - GF_SECURITY_STRICT_TRANSPORT_SECURITY=true
  - GF_SECURITY_STRICT_TRANSPORT_SECURITY_MAX_AGE_SECONDS=31536000
  - GF_SECURITY_X_CONTENT_TYPE_OPTIONS=true
  - GF_SECURITY_X_XSS_PROTECTION=true
  - GF_SECURITY_CONTENT_SECURITY_POLICY=true
  - GF_LOG_MODE=file
  - GF_LOG_LEVEL=${GRAFANA_LOG_LEVEL:-info}
  - GF_LOG_FILTERS=${GRAFANA_LOG_FILTERS:-}
  - GF_SESSION_PROVIDER=file
  - GF_SESSION_COOKIE_SECURE=true
  - GF_SESSION_COOKIE_NAME=grafana_sess
  - GF_USERS_ALLOW_SIGN_UP=false
  - GF_USERS_ALLOW_ORG_CREATE=false
  - GF_USERS_AUTO_ASSIGN_ORG=true
  - GF_USERS_AUTO_ASSIGN_ORG_ROLE=Viewer
  - GF_AUTH_ANONYMOUS_ENABLED=false
  - GF_AUTH_DISABLE_LOGIN_FORM=false
  - GF_DATABASE_TYPE=${GRAFANA_DB_TYPE:-sqlite3}
  - GF_DATABASE_HOST=${GRAFANA_DB_HOST:-}
  - GF_DATABASE_NAME=${GRAFANA_DB_NAME:-grafana}
  - GF_DATABASE_USER=${GRAFANA_DB_USER:-}
  - GF_DATABASE_PASSWORD=${GRAFANA_DB_PASSWORD:-}
  - POSTGRES_DB1_HOST=${POSTGRES_DB1_HOST}
  - POSTGRES_DB1_PORT=${POSTGRES_DB1_PORT}
  - POSTGRES_DB1_DATABASE=${POSTGRES_DB1_DATABASE}
  - POSTGRES_DB1_USER=${POSTGRES_DB1_USER}
  - POSTGRES_DB1_PASSWORD=${POSTGRES_DB1_PASSWORD}
  - POSTGRES_DB2_HOST=${POSTGRES_DB2_HOST}
  - POSTGRES_DB2_PORT=${POSTGRES_DB2_PORT}
  - POSTGRES_DB2_DATABASE=${POSTGRES_DB2_DATABASE}
  - POSTGRES_DB2_USER=${POSTGRES_DB2_USER}
  - POSTGRES_DB2_PASSWORD=${POSTGRES_DB2_PASSWORD}
  - GF_SMTP_ENABLED=${GRAFANA_SMTP_ENABLED:-false}
  - GF_SMTP_HOST=${GRAFANA_SMTP_HOST:-}
  - GF_SMTP_USER=${GRAFANA_SMTP_USER:-}
  - GF_SMTP_PASSWORD=${GRAFANA_SMTP_PASSWORD:-}
  - GF_SMTP_FROM_ADDRESS=${GRAFANA_SMTP_FROM:-grafana@example.com}

# Example services using the common template
services:
  # Production service - just add image and specific config
  grafana-prod:
    <<: *grafana-base
    image: grafana/grafana:12.0.1
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PROD_PASSWORD:-admin}
      - GF_SECURITY_ADMIN_USER=${GRAFANA_PROD_USER:-admin}
      - GF_SERVER_ROOT_URL=${GRAFANA_PROD_ROOT_URL:-http://localhost:3000}
      - GF_SERVER_DOMAIN=${GRAFANA_PROD_DOMAIN:-localhost}
      - GF_SERVER_ENFORCE_DOMAIN=true
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource,grafana-piechart-panel
      <<: *common-environment

  # Development service - different image and config
  grafana-dev:
    <<: *grafana-base
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_DEV_PASSWORD:-dev}
      - GF_SECURITY_ADMIN_USER=${GRAFANA_DEV_USER:-dev}
      - GF_SERVER_ROOT_URL=${GRAFANA_DEV_ROOT_URL:-http://localhost:3001}
      - GF_SERVER_DOMAIN=${GRAFANA_DEV_DOMAIN:-localhost}
      - GF_SERVER_ENFORCE_DOMAIN=false
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource,grafana-piechart-panel,grafana-worldmap-panel
      - GF_USERS_ALLOW_SIGN_UP=true
      - GF_USERS_ALLOW_ORG_CREATE=true
      <<: *common-environment

# Networks
networks:
  monitoring:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br-monitoring
    ipam:
      config:
        - subnet: 172.20.0.0/16
  
  default:
    driver: bridge

# Volumes
volumes:
  grafana_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./grafana/data
  
  grafana_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./grafana/logs 